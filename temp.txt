import React, { useState, useEffect } from "react";
import { motion } from "framer-motion";

// Single-file interactive resume built with Tailwind + Framer Motion
// Drop this into your CRA `src/App.js` (or `src/App.jsx`) to replace the starter app.
// Make sure you've set up Tailwind (see the setup instructions in the chat) and installed framer-motion.

const EXPERIENCES = [
  {
    role: "Software Developer ‚Äî Embedded & Automotive",
    org: "(Your Company / Internship)",
    period: "2023 ‚Äî Present",
    bullets: [
      "Designed and tested embedded firmware in C/C++ for automotive modules.",
      "Built Python tools to generate hardware testcases and parse logs, improving test throughput by 40%.",
    ],
  },
  {
    role: "Research ‚Äî Chapter Publication",
    org: "IOP Science (Chapter 7)",
    period: "2024",
    bullets: [
      "Contributed research published as Chapter 7 in an IOP Science book.",
      "Worked on reproducible experiments and clear writeups for publication.",
    ],
  },
];

const PROJECTS = [
  {
    name: "Automated Test Generator",
    desc: "Python tool that generates hardware testcases, parses results and creates reports.",
    link: "#",
    tags: ["Python", "Automation", "Testing"],
  },
  {
    name: "Narratable Script Generator",
    desc: "Pipeline that fetches content (Wikipedia), summarizes with a transformer model and generates voice-friendly scripts.",
    link: "#",
    tags: ["NLP", "Transformers", "PyTorch"],
  },
];

const SKILLS = [
  "C/C++", "Embedded Systems", "Python", "Git", "Tailwind CSS", "React", "Framer Motion", "Unit Testing",
];

function IconExternal() {
  return (
    <svg className="inline-block ml-1 w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor">
      <path strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" d="M18 13v6a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"/>
      <path strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" d="M15 3h6v6"/>
      <path strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" d="M10 14L21 3"/>
    </svg>
  );
}

export default function App() {
  const [theme, setTheme] = useState("light");

  useEffect(() => {
    // toggle tailwind dark class on <html> for global dark mode
    if (theme === "dark") document.documentElement.classList.add("dark");
    else document.documentElement.classList.remove("dark");
  }, [theme]);

  const section = { hidden: { opacity: 0, y: 20 }, visible: { opacity: 1, y: 0 } };

  return (
    <div className="min-h-screen bg-white dark:bg-slate-900 text-slate-900 dark:text-slate-100 transition-colors duration-300">
      <header className="fixed w-full top-0 left-0 z-40 bg-white/60 dark:bg-slate-900/60 backdrop-blur-sm">
        <nav className="max-w-5xl mx-auto px-6 py-3 flex items-center justify-between">
          <div className="flex items-center gap-3">
            <div className="w-10 h-10 rounded-md bg-gradient-to-br from-indigo-500 to-pink-500 flex items-center justify-center text-white font-bold">PP</div>
            <div className="font-semibold">Pushkar Patil</div>
          </div>
          <div className="hidden md:flex items-center gap-4 text-sm">
            <a className="hover:underline" href="#projects">Projects</a>
            <a className="hover:underline" href="#experience">Experience</a>
            <a className="hover:underline" href="#contact">Contact</a>
            <button
              onClick={() => setTheme(theme === "dark" ? "light" : "dark")}
              className="ml-3 rounded-md p-2 bg-slate-100 dark:bg-slate-800"
              aria-label="Toggle theme"
            >
              {theme === "dark" ? "üåô" : "‚òÄÔ∏è"}
            </button>
          </div>
        </nav>
      </header>

      <main className="pt-20">
        {/* HERO */}
        <motion.section id="hero" className="max-w-5xl mx-auto px-6 py-12" initial="hidden" animate="visible" variants={section}>
          <div className="grid md:grid-cols-2 gap-8 items-center">
            <div>
              <motion.h1 className="text-4xl md:text-5xl font-extrabold leading-tight mb-4" initial={{ x: -10, opacity: 0 }} animate={{ x: 0, opacity: 1 }} transition={{ duration: 0.6 }}>
                Hi ‚Äî I'm Pushkar Patil
              </motion.h1>
              <motion.p className="text-lg text-slate-600 dark:text-slate-300 mb-6 max-w-xl" initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ delay: 0.3 }}>
                Software developer focused on embedded systems and automation tooling. I build reliable firmware and developer tooling that helps teams ship faster.
              </motion.p>

              <div className="flex gap-3">
                <a href="/resume.pdf" className="inline-flex items-center gap-2 px-4 py-2 rounded-md bg-indigo-600 text-white font-semibold hover:opacity-95">Download Resume</a>
                <a href="#projects" className="inline-flex items-center gap-2 px-4 py-2 rounded-md border">See Projects</a>
              </div>

              <div className="mt-6 flex gap-3 text-sm text-slate-600 dark:text-slate-300">
                <a href="#" className="hover:underline">GitHub</a>
                <a href="#" className="hover:underline">LinkedIn</a>
                <a href="#contact" className="hover:underline">‚úâÔ∏è Email</a>
              </div>
            </div>

            <motion.div className="rounded-xl p-6 bg-slate-50 dark:bg-slate-800 shadow-md" initial={{ scale: 0.98, opacity: 0 }} animate={{ scale: 1, opacity: 1 }} transition={{ duration: 0.6 }}>
              <h3 className="font-semibold mb-2">Quick facts</h3>
              <ul className="text-sm space-y-2 text-slate-700 dark:text-slate-200">
                <li>üìç Based in India</li>
                <li>üíº 2+ years in embedded systems & tooling</li>
                <li>üìö Published research (Chapter 7, IOP Science)</li>
              </ul>
            </motion.div>
          </div>
        </motion.section>

        {/* ABOUT */}
        <motion.section id="about" className="max-w-5xl mx-auto px-6 py-8" variants={section} initial="hidden" whileInView="visible" viewport={{ once: true }}>
          <div className="prose dark:prose-invert max-w-none">
            <h2>About</h2>
            <p>
              I build embedded firmware and developer tools. I enjoy turning messy hardware logs into clear actionable reports and writing code that engineers enjoy using.
            </p>
          </div>
        </motion.section>

        {/* EXPERIENCE */}
        <motion.section id="experience" className="max-w-5xl mx-auto px-6 py-8" variants={section} initial="hidden" whileInView="visible" viewport={{ once: true }}>
          <h2 className="mb-6">Experience</h2>
          <div className="space-y-6">
            {EXPERIENCES.map((e, i) => (
              <article key={i} className="p-5 rounded-xl bg-slate-50 dark:bg-slate-800 shadow-sm">
                <div className="flex items-start justify-between">
                  <div>
                    <h3 className="font-semibold">{e.role}</h3>
                    <p className="text-sm text-slate-600 dark:text-slate-300">{e.org} ‚Ä¢ {e.period}</p>
                  </div>
                </div>
                <ul className="mt-3 list-disc ml-5 text-sm text-slate-700 dark:text-slate-200">
                  {e.bullets.map((b, j) => (<li key={j}>{b}</li>))}
                </ul>
              </article>
            ))}
          </div>
        </motion.section>

        {/* PROJECTS */}
        <motion.section id="projects" className="max-w-5xl mx-auto px-6 py-8" variants={section} initial="hidden" whileInView="visible" viewport={{ once: true }}>
          <h2 className="mb-6">Projects</h2>
          <div className="grid sm:grid-cols-2 gap-6">
            {PROJECTS.map((p, i) => (
              <motion.a key={i} href={p.link} className="block p-5 rounded-xl bg-white dark:bg-slate-800 shadow hover:shadow-md transition" whileHover={{ y: -4 }}>
                <h3 className="font-semibold">{p.name} <IconExternal/></h3>
                <p className="text-sm text-slate-600 dark:text-slate-300 mt-2">{p.desc}</p>
                <div className="mt-4 flex gap-2 flex-wrap">
                  {p.tags.map((t, k) => <span key={k} className="text-xs px-2 py-1 rounded-full bg-slate-100 dark:bg-slate-700">{t}</span>)}
                </div>
              </motion.a>
            ))}
          </div>
        </motion.section>

        {/* SKILLS */}
        <motion.section id="skills" className="max-w-5xl mx-auto px-6 py-8" variants={section} initial="hidden" whileInView="visible" viewport={{ once: true }}>
          <h2 className="mb-4">Skills</h2>
          <div className="flex flex-wrap gap-2">
            {SKILLS.map((s, i) => (
              <span key={i} className="px-3 py-1 rounded-full bg-slate-100 dark:bg-slate-700 text-sm">{s}</span>
            ))}
          </div>
        </motion.section>

        {/* CONTACT */}
        <motion.section id="contact" className="max-w-5xl mx-auto px-6 py-8" variants={section} initial="hidden" whileInView="visible" viewport={{ once: true }}>
          <h2>Contact</h2>
          <p className="mb-4">Interested in collaborating or hiring? <a className="underline" href="mailto:hello@example.com">hello@example.com</a></p>

          <div className="rounded-xl p-6 bg-slate-50 dark:bg-slate-800 shadow-sm">
            <p className="text-sm">You can also find me on GitHub: <a href="#" className="underline">github.com/your-username</a></p>
          </div>
        </motion.section>

      </main>

      <footer className="mt-12 py-8 border-t border-slate-200 dark:border-slate-800">
        <div className="max-w-5xl mx-auto px-6 text-sm text-slate-600 dark:text-slate-400">¬© {new Date().getFullYear()} Pushkar Patil ‚Äî Built with React, Tailwind & Framer Motion</div>
      </footer>
    </div>
  );
}
